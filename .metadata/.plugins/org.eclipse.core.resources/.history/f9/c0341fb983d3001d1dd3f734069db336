package Modelos;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;

public class Pronostico extends Partido{
	private ArrayList<Usuario> usuarios = new ArrayList<Usuario>();
	private boolean[] pronostico=new boolean[3];

	public Pronostico(Equipo local, Equipo visitante,boolean[] pronostico) {
		super(local, visitante);
		// TODO Auto-generated constructor stub
		this.pronostico=pronostico;
	}

	public boolean[] getPronostico() {
		return pronostico;
	}

	public void setPronostico(boolean[] pronostico) {
		this.pronostico = pronostico;
	}
	
	public ArrayList<Usuario> getUsuarios() {
		return usuarios;
	}

	public void setUsuarios(ArrayList<Usuario> usuarios) {
		this.usuarios = usuarios;
	}
	
	public void setResulta(){
		try {
			for(String linea:Files.readAllLines(Paths.get(this.ruta))) {
				int auxRonda=Integer.parseInt(linea.split(";")[0]);
				Ronda ronda=new Ronda(auxRonda);
				if(rondas.contains(ronda)) {
					int lugarDeLaRonda = rondas.indexOf(ronda);
					Ronda rondaselecionada=rondas.get(lugarDeLaRonda);
					String local=linea.split(";")[1];
					String visitante=linea.split(";")[4];
					int golesLocal=Integer.valueOf(linea.split(";")[2]);
					int golesVisitante=Integer.valueOf(linea.split(";")[3]);
					Partido partido=setPartido(local,visitante,golesLocal,golesVisitante);
					rondaselecionada.getPartidos().add(partido);
				}
				else {
					rondas.add(ronda);
					String local=linea.split(";")[1];
					String visitante=linea.split(";")[4];
					int golesLocal=Integer.valueOf(linea.split(";")[2]);
					int golesVisitante=Integer.valueOf(linea.split(";")[3]);
					Partido partido=setPartido(local,visitante,golesLocal,golesVisitante);
					ronda.getPartidos().add(partido);
				}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	public void setResultados(String ruta){
		try {
			for(String linea:Files.readAllLines(Paths.get(ruta))) {
				String nombreCompleto=linea.split(";")[0];
				String dni=linea.split(";")[1];
				Usuario usuario=new Usuario(nombreCompleto,dni);
				
				boolean[] pronostico=new boolean[3];
				String l=linea.split(";")[0];
				pronostico[0]=Boolean.valueOf(linea.split(";")[1]);
				pronostico[1]=Boolean.valueOf(linea.split(";")[2]);
				pronostico[2]=Boolean.valueOf(linea.split(";")[3]);
				String v=linea.split(";")[4];
				Partido partido=generar_partido(l,v,pronostico);
				this.partidos.add(partido);
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return this.partidos;
	}
	
	public Partido generar_partido(String l,String v,boolean[] pronostico) {
		Equipo local=new Equipo(l);
		Equipo visitante=new Equipo(v);
		Pronostico prode=new Pronostico(local,visitante,pronostico);
		prode.resultado();
		return prode;
	}
	
	

	public void resultado() {
		if(this.pronostico[0]==true) {
			super.setResultado(EGanador.LOCAL);
		}
		else if(this.pronostico[1]==true) {
			super.setResultado(EGanador.EMPATE);
		}
		else if(this.pronostico[2]==true) {
			super.setResultado(EGanador.VISITANTE);
		}
	}
}
